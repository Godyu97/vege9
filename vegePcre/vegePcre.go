/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 4.0.1
 *
 * This file is not intended to be easily readable and contains a number of
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG
 * interface file instead.
 * ----------------------------------------------------------------------------- */

// source: mypcre.i

package vegePcre

/*
#define intgo swig_intgo
typedef void *swig_voidp;

#include <stdint.h>


typedef long long intgo;
typedef unsigned long long uintgo;



typedef struct { char *p; intgo n; } _gostring_;
typedef struct { void* array; intgo len; intgo cap; } _goslice_;


extern void _wrap_Swig_free_vegePcre_f83a3cf6dbc14c45(uintptr_t arg1);
extern uintptr_t _wrap_Swig_malloc_vegePcre_f83a3cf6dbc14c45(swig_intgo arg1);
extern uintptr_t _wrap_Pcrepp_Replace_vegePcre_f83a3cf6dbc14c45(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3);
#undef intgo
*/
import "C"

import "unsafe"
import _ "runtime/cgo"
import "sync"


type _ unsafe.Pointer



var Swig_escape_always_false bool
var Swig_escape_val interface{}


type _swig_fnptr *byte
type _swig_memberptr *byte


type _ sync.Mutex

func Swig_free(arg1 uintptr) {
	_swig_i_0 := arg1
	C._wrap_Swig_free_vegePcre_f83a3cf6dbc14c45(C.uintptr_t(_swig_i_0))
}

func Swig_malloc(arg1 int) (_swig_ret uintptr) {
	var swig_r uintptr
	_swig_i_0 := arg1
	swig_r = (uintptr)(C._wrap_Swig_malloc_vegePcre_f83a3cf6dbc14c45(C.swig_intgo(_swig_i_0)))
	return swig_r
}

func Pcrepp_Replace(arg1 Std_string, arg2 Std_string, arg3 Std_string) (_swig_ret Std_string) {
	var swig_r Std_string
	_swig_i_0 := arg1.Swigcptr()
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3.Swigcptr()
	swig_r = (Std_string)(SwigcptrStd_string(C._wrap_Pcrepp_Replace_vegePcre_f83a3cf6dbc14c45(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2))))
	return swig_r
}


type SwigcptrStd_string uintptr
type Std_string interface {
	Swigcptr() uintptr;
}
func (p SwigcptrStd_string) Swigcptr() uintptr {
	return uintptr(p)
}

